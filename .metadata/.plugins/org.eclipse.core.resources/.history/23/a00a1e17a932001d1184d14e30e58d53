/*
 * Foster Smith
 * 9/12/22
 * StudentsStanding.java
 * 8a
 */

package programs;

import static java.nio.file.StandardOpenOption.CREATE;
import static java.nio.file.StandardOpenOption.WRITE;

import java.io.File;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class StudentsStanding {
	final static int NUMRECS = 1000;
	final static byte[] DEFAULT_RECORD = "000,XXXXXXXXXXXXXXX,XXXXXXXXXXXXXXX,0.000\n".getBytes();
	
	public static void main(String[] args) {
		Path goodFile = Paths.get("goodstanding.txt");
		Path badFile = Paths.get("badstanding.txt");
		FileChannel goodChannel, badChannel;
		
		try {
			//create if necessary
			if(Files.exists(goodFile)) {
				goodChannel = (FileChannel)Files.newByteChannel(goodFile, WRITE);
			} else {
				goodChannel = (FileChannel)Files.newByteChannel(goodFile, WRITE, CREATE);
				ByteBuffer out = ByteBuffer.wrap(DEFAULT_RECORD);
				for(int i = 0; i < NUMRECS; ++i) {
					while(out.hasRemaining()) {
						goodChannel.write(out);
					}
				}
			}
			
			//open files
			FileChannel badChannel = (FileChannel)Files.newByteChannel(badFile, WRITE, CREATE);
			
			//get data
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public 
	
}
