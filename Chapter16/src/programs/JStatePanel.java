package programs;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class JStatePanel extends JPanel {

	double boatx = 1300, boaty = 100;
	double boatVx = 5, boatVy = 2;
	//double theta = Math.atan2(boatVy,boatVx);
	double speed = Math.sqrt(boatVx*boatVx+boatVy*boatVy);
	
	boolean boatMoving = true;
	
	public JStatePanel() {
		setBackground(Color.cyan);
		Thread boatThread = new Thread() {
			@Override
			public void run() {
				while(boatMoving) {
					boolean hitWall = false;
					if(boatx > 1421) {
						boatVx = Math.abs(boatVx)*-1;
						hitWall = true;
					} if(boatx < 1200) {
						boatVx = Math.abs(boatVx);
						hitWall = true;
					} if(boaty > 400) {
						boatVy = Math.abs(boatVy)*-1;		
						hitWall = true;
					} if(boaty < 1) {
						boatVy = Math.abs(boatVy);
						hitWall = true;
					}
					
					/*if(hitWall) {
						theta = Math.atan2(boatVy,boatVx);
					}*/
					
					if(!hitWall && Math.random()>0.9) {
						//theta += Math.random()*0.2d-0.1d;
						//theta %= Math.PI*2;
						double newTheta = Math.random()*2*Math.PI;
						boatVx = Math.cos(newTheta)*speed;
						boatVy = Math.sin(newTheta)*speed;
					}
					
					boatx += boatVx;
					boaty += boatVy;
					repaint();
					try {
						Thread.sleep(100);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		};
		
		boatThread.start();
	}
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D)(g);
		GeneralPath statePath = new GeneralPath();
		g2d.setStroke(new BasicStroke(3.7f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
		g2d.setColor(Color.magenta);
		
		double s = 0.0037f;
		double x = 100f;
		double y = -3200f;

		g2d.setColor(Color.gray);
		g2d.fillRect(0, 0, 314, 1000);
		
		for(int i = 0; i <= 6; ++i) {
			double[][] points = getStatePoints(i);
			GeneralPath p = new GeneralPath();
			p.moveTo(points[0][0]*s+x, 500-(points[0][1]*s+y));
			for(int n = 0; n < points.length; ++n) {
				p.lineTo(points[n][0]*s+x, 500-(points[n][1]*s+y ));
			}
			g2d.setColor(Color.GRAY);
			g2d.fill(p);
		}
		
		
		double[] xCoords = {56066.189999997616*s+x,75567.54999999702*s+x,83478.65999999642*s+x,121650.02000000328*s+x,136117.93999999762*s+x,164753.7800000012*s+x,167150.6099999994*s+x,217436.90999999642*s+x,220278.40999999642*s+x,221249.79999999702*s+x,225683.63000000268*s+x,226088.4699999988*s+x,231028.1400000006*s+x,235537.45000000298*s+x,238791.7800000012*s+x,247273.79999999702*s+x,253141.3900000006*s+x,256068.90999999642*s+x,255974.72999999672*s+x,249703.0300000012*s+x,253247.6700000018*s+x,256253.5799999982*s+x,259584.68999999762*s+x,258644.13000000268*s+x,256330.15999999642*s+x,255329.59000000358*s+x,262313.8100000024*s+x,262826.2800000012*s+x,259536.68999999762*s+x,260522.34000000358*s+x,262560.9099999964*s+x,264511.2800000012*s+x,266728.25*s+x,265618.8400000036*s+x,267602.5900000036*s+x,267322.8100000024*s+x,271937.6899999976*s+x,272129.5300000012*s+x,274467.0900000036*s+x,274357.7800000012*s+x,272822.25*s+x,269356.8800000027*s+x,268764.1300000027*s+x,264975.5*s+x,255959.6700000018*s+x,247517.09000000358*s+x,251922.3599999994*s+x,250221.75*s+x,252898.88000000268*s+x,254155.4200000018*s+x,250065.68999999762*s+x,246957.27000000328*s+x,246852.0300000012*s+x,248504.6099999994*s+x,245858.59000000358*s+x,245185.1400000006*s+x,244379.1400000006*s+x,242133.70000000298*s+x,244784.6099999994*s+x,242894.3900000006*s+x,241151.68999999762*s+x,239535.6400000006*s+x,241764.77000000328*s+x,236883.7199999988*s+x,240004.3299999982*s+x,237459.84000000358*s+x,238430.4699999988*s+x,239495.15999999642*s+x,240314.3599999994*s+x,241585.7800000012*s+x,239448.9200000018*s+x,241033.4699999988*s+x,244942.59000000358*s+x,243506.75*s+x,244556.6400000006*s+x,246317.3299999982*s+x,247609.97999999672*s+x,249353.45000000298*s+x,249972.09000000358*s+x,251035.27000000328*s+x,252555.8599999994*s+x,248299.72999999672*s+x,250502.95000000298*s+x,252810.0799999982*s+x,255700.31000000238*s+x,258900.68999999762*s+x,259862.63000000268*s+x,264538.25*s+x,263280.3400000036*s+x,265438.6899999976*s+x,265753.0600000024*s+x,274510.6899999976*s+x,271358.4099999964*s+x,270935.8100000024*s+x,272755.8400000036*s+x,269406.5900000036*s+x,268691.8800000027*s+x,265721.7199999988*s+x,266138.9699999988*s+x,270929.1300000027*s+x,270706.8800000027*s+x,272751.1300000027*s+x,275629.7800000012*s+x,279520.1300000027*s+x,279965.9399999976*s+x,289542.6899999976*s+x,300561.6599999964*s+x,302027.3400000036*s+x,299910.3800000027*s+x,295573.0300000012*s+x,295841.3800000027*s+x,302948.1300000027*s+x,307556.8800000027*s+x,320870.4099999964*s+x,324086.1599999964*s+x,323837.1899999976*s+x,322009.8400000036*s+x,324101.1899999976*s+x,321397.8800000027*s+x,320887.5300000012*s+x,319070.5300000012*s+x,318385.9699999988*s+x,316846.8400000036*s+x,314472.9099999964*s+x,310119.7199999988*s+x,307245.8100000024*s+x,309556.0900000036*s+x,307980.8400000036*s+x,303032.9099999964*s+x,304928.8800000027*s+x,310202.1899999976*s+x,316591.0300000012*s+x,320035.9099999964*s+x,327426.0*s+x,330286.0600000024*s+x,328566.5300000012*s+x,326283.8100000024*s+x,328159.7199999988*s+x,328839.6300000027*s+x,330342.0*s+x,331052.6899999976*s+x,329605.8400000036*s+x,329967.1899999976*s+x,329209.4399999976*s+x,327260.5*s+x,327310.1300000027*s+x,324843.3100000024*s+x,328867.7199999988*s+x,328188.75*s+x,309450.1300000027*s+x,302821.2800000012*s+x,302511.6899999976*s+x,304696.8400000036*s+x,303281.6300000027*s+x,295982.3800000027*s+x,292428.1899999976*s+x,291139.2800000012*s+x,285735.9099999964*s+x,281507.4099999964*s+x,281485.2800000012*s+x,280275.1599999964*s+x,276579.1300000027*s+x,276639.8800000027*s+x,275497.75*s+x,268054.6300000027*s+x,271272.0*s+x,270810.9699999988*s+x,272751.1599999964*s+x,270145.4399999976*s+x,273366.0600000024*s+x,272283.1899999976*s+x,270054.4699999988*s+x,273144.6899999976*s+x,272060.8100000024*s+x,273276.3400000036*s+x,273354.9099999964*s+x,270310.1599999964*s+x,271065.1899999976*s+x,269329.9099999964*s+x,270406.5600000024*s+x,267048.0300000012*s+x,265990.0300000012*s+x,263628.0300000012*s+x,265115.0900000036*s+x,262286.1300000027*s+x,262917.6300000027*s+x,261791.8599999994*s+x,260807.20000000298*s+x,259984.2800000012*s+x,257073.0*s+x,258386.54999999702*s+x,255047.5300000012*s+x,252697.40999999642*s+x,252925.75*s+x,248874.5300000012*s+x,247923.1099999994*s+x,249317.5799999982*s+x,247725.9200000018*s+x,246868.95000000298*s+x,245289.5*s+x,244594.04999999702*s+x,247620.5*s+x,246076.02000000328*s+x,245551.0*s+x,244397.81000000238*s+x,242588.20000000298*s+x,242715.1700000018*s+x,238641.52000000328*s+x,238275.1400000006*s+x,237615.45000000298*s+x,234825.75*s+x,237975.31000000238*s+x,235918.56000000238*s+x,236222.56000000238*s+x,234970.5*s+x,232368.84000000358*s+x,233656.6400000006*s+x,231972.3900000006*s+x,229885.97999999672*s+x,225079.5300000012*s+x,232752.43999999762*s+x,231746.20000000298*s+x,229566.1400000006*s+x,225473.15999999642*s+x,223058.47999999672*s+x,222557.0799999982*s+x,219410.56000000238*s+x,215022.20000000298*s+x,212839.0*s+x,213850.9200000018*s+x,209631.18999999762*s+x,209745.65999999642*s+x,210052.0300000012*s+x,200212.65999999642*s+x,175326.70000000298*s+x,174958.6700000018*s+x,150728.34000000358*s+x,147301.81000000238*s+x,116566.40999999642*s+x,110398.92000000179*s+x,96010.42000000179*s+x,94991.13000000268*s+x,90831.6799999997*s+x,90996.04999999702*s+x,75299.43999999762*s+x,72026.8900000006*s+x,35747.4299999997*s+x,34616.109999999404*s+x,47891.0700000003*s+x,56066.189999997616*s+x};
	
		double[] yCoords = {945422.5*s+y,944418.5599999987*s+y,943944.75*s+y,942151.8099999987*s+y,941389.1900000013*s+y,939711.5599999987*s+y,939496.25*s+y,938689.0599999987*s+y,941747.5*s+y,943693.379999999*s+y,943175.129999999*s+y,950793.879999999*s+y,952031.4400000013*s+y,950501.75*s+y,955724.25*s+y,959551.5*s+y,957181.0*s+y,957606.8099999987*s+y,952107.5599999987*s+y,952719.8099999987*s+y,949447.5*s+y,951040.0599999987*s+y,939489.5599999987*s+y,938704.8099999987*s+y,944117.0*s+y,939040.5*s+y,936289.8099999987*s+y,934357.0*s+y,935651.3099999987*s+y,932244.1900000013*s+y,931989.5599999987*s+y,934265.0*s+y,932997.25*s+y,931610.6900000013*s+y,931208.4400000013*s+y,934245.1900000013*s+y,936757.629999999*s+y,934277.4400000013*s+y,933714.5*s+y,931443.8099999987*s+y,931381.629999999*s+y,925861.25*s+y,928655.0*s+y,924505.379999999*s+y,921903.6900000013*s+y,921711.4400000013*s+y,920035.25*s+y,915584.4400000013*s+y,918243.1900000013*s+y,915434.75*s+y,911549.629999999*s+y,911980.0*s+y,907944.0*s+y,906590.0*s+y,907112.1900000013*s+y,910712.4400000013*s+y,909217.9400000013*s+y,905488.129999999*s+y,899263.6900000013*s+y,899360.5599999987*s+y,903139.9400000013*s+y,901970.75*s+y,899187.129999999*s+y,900320.25*s+y,898373.8099999987*s+y,896923.8099999987*s+y,892962.25*s+y,894551.1900000013*s+y,894910.4400000013*s+y,894296.129999999*s+y,892784.3099999987*s+y,890776.379999999*s+y,891586.379999999*s+y,887534.0599999987*s+y,886599.0*s+y,889380.129999999*s+y,887277.3099999987*s+y,890062.0599999987*s+y,888279.0*s+y,889816.9400000013*s+y,889274.5*s+y,894782.5599999987*s+y,894928.8099999987*s+y,891185.629999999*s+y,890205.879999999*s+y,887349.9400000013*s+y,888940.9400000013*s+y,883776.129999999*s+y,878659.4400000013*s+y,877041.379999999*s+y,879305.6900000013*s+y,861728.3099999987*s+y,860544.75*s+y,862019.5*s+y,863134.5599999987*s+y,868212.75*s+y,862327.1900000013*s+y,862248.75*s+y,860574.3099999987*s+y,855813.129999999*s+y,859098.0*s+y,855011.0*s+y,855494.1900000013*s+y,853532.129999999*s+y,839945.379999999*s+y,833158.25*s+y,831629.379999999*s+y,830886.3099999987*s+y,830181.8099999987*s+y,830741.629999999*s+y,829221.6900000013*s+y,828847.3099999987*s+y,832922.1900000013*s+y,837142.379999999*s+y,840848.1900000013*s+y,849278.629999999*s+y,849876.629999999*s+y,851643.6900000013*s+y,852010.75*s+y,854091.75*s+y,853075.879999999*s+y,848247.9400000013*s+y,860292.629999999*s+y,865598.5*s+y,867468.4400000013*s+y,865115.9400000013*s+y,865413.0599999987*s+y,863836.75*s+y,868498.1900000013*s+y,870621.9400000013*s+y,870746.5599999987*s+y,868423.379999999*s+y,865009.0599999987*s+y,851564.0*s+y,841103.4400000013*s+y,843968.75*s+y,838677.6900000013*s+y,839994.129999999*s+y,838514.879999999*s+y,839236.0*s+y,828778.379999999*s+y,824172.5599999987*s+y,834503.879999999*s+y,836942.3099999987*s+y,836787.75*s+y,832649.629999999*s+y,830237.129999999*s+y,829435.4400000013*s+y,824811.379999999*s+y,822789.9400000013*s+y,817805.129999999*s+y,819729.379999999*s+y,821087.879999999*s+y,821828.6900000013*s+y,820694.25*s+y,817856.0*s+y,821519.0599999987*s+y,812471.8099999987*s+y,811314.4400000013*s+y,814441.8099999987*s+y,811194.3099999987*s+y,810831.0*s+y,813200.5*s+y,810605.8099999987*s+y,807915.879999999*s+y,813534.629999999*s+y,821463.25*s+y,823230.879999999*s+y,823446.5*s+y,825233.129999999*s+y,826925.379999999*s+y,825870.25*s+y,828567.75*s+y,830209.0599999987*s+y,832100.9400000013*s+y,832309.629999999*s+y,831815.5599999987*s+y,829325.879999999*s+y,827552.0599999987*s+y,829593.5599999987*s+y,830383.6900000013*s+y,833031.75*s+y,830770.5599999987*s+y,824933.0599999987*s+y,828383.8099999987*s+y,825089.25*s+y,825116.9400000013*s+y,820703.1900000013*s+y,822539.0599999987*s+y,822814.129999999*s+y,820158.5599999987*s+y,819819.0599999987*s+y,819947.3099999987*s+y,814949.1900000013*s+y,824532.5*s+y,821428.6900000013*s+y,815997.129999999*s+y,817802.3099999987*s+y,814394.629999999*s+y,816653.3099999987*s+y,815510.6900000013*s+y,809837.0*s+y,809522.5599999987*s+y,807064.129999999*s+y,809968.379999999*s+y,809307.75*s+y,806329.9400000013*s+y,805271.8099999987*s+y,803011.879999999*s+y,805197.379999999*s+y,806226.129999999*s+y,807205.629999999*s+y,816637.25*s+y,808712.4400000013*s+y,807835.1900000013*s+y,810171.4400000013*s+y,806558.4400000013*s+y,804836.629999999*s+y,822842.6900000013*s+y,825404.879999999*s+y,836439.5*s+y,841005.25*s+y,832081.4400000013*s+y,828301.9400000013*s+y,829927.129999999*s+y,828638.5*s+y,833298.629999999*s+y,835782.4400000013*s+y,840327.75*s+y,849534.1900000013*s+y,848684.379999999*s+y,858771.8099999987*s+y,862599.6900000013*s+y,862096.1900000013*s+y,861586.3099999987*s+y,863109.879999999*s+y,864105.879999999*s+y,864198.1900000013*s+y,864978.75*s+y,864037.5599999987*s+y,865593.6900000013*s+y,862088.6900000013*s+y,861598.5*s+y,865632.0*s+y,866170.0599999987*s+y,866261.0599999987*s+y,868247.5*s+y,871610.25*s+y,918783.5*s+y,945422.5*s+y};

		if(xCoords.length != yCoords.length) {
			throw new IllegalArgumentException("xCoords length != yCoords length");
		}
		
		statePath.moveTo(xCoords[0], 500-yCoords[0]);
		for(int i = 1; i < xCoords.length; ++i) {
			statePath.lineTo(xCoords[i], 500-yCoords[i]);
		}
		statePath.closePath();
		
		g2d.setPaint(new GradientPaint(100, 100, new Color(220, 14, 250), 1000, 1000, new Color(255, 205, 0), true));
		g2d.fill(statePath);
		g2d.setPaint(new GradientPaint(100, 100, new Color(157, 11, 179), 1000, 1000, new Color(184, 147, 0), true));
		g2d.draw(statePath);
		//g2d.setColor(new Color(128, 0, 255));
		g2d.setFont(new Font("Old English Text MT", Font.BOLD, 70));
		g2d.drawString("Massachusetts", 400, 380);
		
		g2d.setColor(Color.BLACK);
		GeneralPath heartPath = drawHeart(100, 960, 340);
		g2d.fill(heartPath);
		g2d.setFont(new Font("Engravers MT", Font.BOLD, 20));
		g2d.drawString("MIT", 960, 340);
		
		try {
			BufferedImage boat = ImageIO.read(new File("floatduck.png"));
			g2d.drawImage(boat, (int)boatx, (int)boaty, 60, 60, null);
		} catch(IOException e) {}
	}
	
	public GeneralPath drawHeart(double adjustSize,double adjustX,double adjustY)
	{
		double y;
		GeneralPath heartPath=new GeneralPath();for(double i=-2;i<=2;i+=.001)
		{
			y=-Math.sqrt(1-Math.pow((Math.abs(i)-1),2));
			if(i==-2)
			{
				heartPath.moveTo(((i*adjustSize+250)*.1)+adjustX,((y*adjustSize+200)*.1)+adjustY);
			}
			heartPath.lineTo(((i*adjustSize+250)*.1)+adjustX,((y*adjustSize+200)*.1)+adjustY);
		}for(double i=-2;i<=2;i+=.001)
		{
			y=3*(Math.sqrt(1-((Math.sqrt(Math.abs(i))/Math.sqrt(2)))));
			if(i==-2)
			{
				heartPath.moveTo(((i*adjustSize+250)*.1)+adjustX,((y*adjustSize+200)*.1)+adjustY);
			}
			heartPath.lineTo(((i*adjustSize+250)*.1)+adjustX,((y*adjustSize+200)*.1)+adjustY);
		}
		return heartPath;
	}
	

	
	public double[][] getStatePoints(int i){
		try {
			String xName = i+"_xCoords.txt";
			String yName = i+"_yCoords.txt";
			BufferedReader xIn = new BufferedReader(new InputStreamReader(new BufferedInputStream(new FileInputStream(xName))));
			BufferedReader yIn = new BufferedReader(new InputStreamReader(new BufferedInputStream(new FileInputStream(yName))));
		
			String[] xStrings = xIn.readLine().split(",");
			String[] yStrings = yIn.readLine().split(",");
			
			double[][] out = new double[xStrings.length][2];
			for(int n = 0; n < xStrings.length; ++n) {
				out[n][0] = Double.parseDouble(xStrings[n]);
				out[n][1] = Double.parseDouble(yStrings[n]);
			}
			
			xIn.close();
			yIn.close();
			return out;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
		
	}
	
	public static void main(String[] args) {
		JFrame f1 = new JFrame("The superior state panel program");
		f1.setResizable(false);
		f1.add(new JStatePanel());
		f1.setSize(1500,900);
		f1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f1.setVisible(true);
	}
}


/*
import shapefile

def write_shape(shape, filename):
    with open(filename, 'w') as f:
        for point in shape.points:
            f.write(f'')

r = shapefile.Reader("NEWENGLAND_POLY.shp")
shapes = r.shapes()

i = 0
for shape in shapes:
    
    i += 1*/
